{"ast":null,"code":"\"use client\";\n\nimport _objectSpread from \"G:/shaankichai/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"G:/shaankichai/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"G:/shaankichai/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"];\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    split = _ref.split,\n    className = _ref.className,\n    childBsPrefix = _ref.childBsPrefix,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? Button : _ref$as,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  var dropdownContext = useContext(DropdownContext);\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  var _useDropdownToggle = useDropdownToggle(),\n    _useDropdownToggle2 = _slicedToArray(_useDropdownToggle, 1),\n    toggleProps = _useDropdownToggle2[0];\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle'));\n\n  // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    className: classNames(className, prefix, split && \"\".concat(prefix, \"-split\"), (dropdownContext == null ? void 0 : dropdownContext.show) && 'show')\n  }, toggleProps), props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","map":{"version":3,"names":["_objectSpread","_slicedToArray","_objectWithoutProperties","_excluded","useMergedRefs","DropdownContext","useDropdownToggle","classNames","React","useContext","Button","useBootstrapPrefix","useWrappedRefWithWarning","jsx","_jsx","DropdownToggle","forwardRef","_ref","ref","bsPrefix","split","className","childBsPrefix","_ref$as","as","Component","props","prefix","dropdownContext","undefined","_useDropdownToggle","_useDropdownToggle2","toggleProps","concat","show","displayName"],"sources":["G:/shaankichai/node_modules/react-bootstrap/esm/DropdownToggle.js"],"sourcesContent":["\"use client\";\n\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle'));\n\n  // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,aAAA;AAAA,OAAAC,cAAA;AAAA,OAAAC,wBAAA;AAAA,IAAAC,SAAA;AAEb,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,IAAMC,cAAc,GAAG,aAAaP,KAAK,CAACQ,UAAU,CAAC,UAAAC,IAAA,EAQlDC,GAAG,EAAK;EAAA,IAPTC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IACRC,KAAK,GAAAH,IAAA,CAALG,KAAK;IACLC,SAAS,GAAAJ,IAAA,CAATI,SAAS;IACTC,aAAa,GAAAL,IAAA,CAAbK,aAAa;IAAAC,OAAA,GAAAN,IAAA,CAEbO,EAAE;IAAEC,SAAS,GAAAF,OAAA,cAAGb,MAAM,GAAAa,OAAA;IACnBG,KAAK,GAAAxB,wBAAA,CAAAe,IAAA,EAAAd,SAAA;EAER,IAAMwB,MAAM,GAAGhB,kBAAkB,CAACQ,QAAQ,EAAE,iBAAiB,CAAC;EAC9D,IAAMS,eAAe,GAAGnB,UAAU,CAACJ,eAAe,CAAC;EACnD,IAAIiB,aAAa,KAAKO,SAAS,EAAE;IAC/BH,KAAK,CAACP,QAAQ,GAAGG,aAAa;EAChC;EACA,IAAAQ,kBAAA,GAAsBxB,iBAAiB,CAAC,CAAC;IAAAyB,mBAAA,GAAA9B,cAAA,CAAA6B,kBAAA;IAAlCE,WAAW,GAAAD,mBAAA;EAClBC,WAAW,CAACd,GAAG,GAAGd,aAAa,CAAC4B,WAAW,CAACd,GAAG,EAAEN,wBAAwB,CAACM,GAAG,EAAE,gBAAgB,CAAC,CAAC;;EAEjG;EACA;EACA,OAAO,aAAaJ,IAAI,CAACW,SAAS,EAAAzB,aAAA,CAAAA,aAAA;IAChCqB,SAAS,EAAEd,UAAU,CAACc,SAAS,EAAEM,MAAM,EAAEP,KAAK,OAAAa,MAAA,CAAON,MAAM,WAAQ,EAAE,CAACC,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACM,IAAI,KAAK,MAAM;EAAC,GACtIF,WAAW,GACXN,KAAK,CACT,CAAC;AACJ,CAAC,CAAC;AACFX,cAAc,CAACoB,WAAW,GAAG,gBAAgB;AAC7C,eAAepB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
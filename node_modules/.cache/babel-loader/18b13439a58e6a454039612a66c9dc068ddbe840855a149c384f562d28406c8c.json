{"ast":null,"code":"var _jsxFileName = \"G:\\\\shaankichai\\\\src\\\\sources\\\\anime.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport lottie from 'lottie-web';\nimport animationData from './1.json'; // Replace with the actual JSON data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundAnimation = () => {\n  _s();\n  useEffect(() => {\n    // Options for the Lottie animation\n    const options = {\n      container: document.getElementById('background-animation'),\n      // HTML element to render the animation\n      renderer: 'svg',\n      // You can use 'svg', 'canvas', or 'html' based on your preference\n      loop: false,\n      // Whether the animation should loop\n      autoplay: true,\n      // Whether the animation should play automatically\n      animationData // The JSON animation data\n    };\n\n    const animation = lottie.loadAnimation(options);\n    return () => {\n      // Clean up when the component is unmounted\n      animation.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"background-animation\",\n    style: {\n      width: '100%',\n      height: '50%',\n      alignItems: \"center\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_s(BackgroundAnimation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = BackgroundAnimation;\nexport default BackgroundAnimation;\nvar _c;\n$RefreshReg$(_c, \"BackgroundAnimation\");","map":{"version":3,"names":["React","useEffect","lottie","animationData","jsxDEV","_jsxDEV","BackgroundAnimation","_s","options","container","document","getElementById","renderer","loop","autoplay","animation","loadAnimation","destroy","id","style","width","height","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/shaankichai/src/sources/anime.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport lottie from 'lottie-web';\r\nimport animationData from './1.json'; // Replace with the actual JSON data\r\n\r\nconst BackgroundAnimation = () => {\r\n  useEffect(() => {\r\n    // Options for the Lottie animation\r\n    const options = {\r\n      container: document.getElementById('background-animation'), // HTML element to render the animation\r\n      renderer: 'svg', // You can use 'svg', 'canvas', or 'html' based on your preference\r\n      loop: false, // Whether the animation should loop\r\n      autoplay: true, // Whether the animation should play automatically\r\n      animationData, // The JSON animation data\r\n\r\n    };\r\n\r\n    const animation = lottie.loadAnimation(options);\r\n\r\n    return () => {\r\n      // Clean up when the component is unmounted\r\n      animation.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return <div id=\"background-animation\" style={{ width: '100%', height: '50%', alignItems: \"center\" }} />;\r\n};\r\n\r\nexport default BackgroundAnimation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,YAAY;AAC/B,OAAOC,aAAa,MAAM,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChCN,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,OAAO,GAAG;MACdC,SAAS,EAAEC,QAAQ,CAACC,cAAc,CAAC,sBAAsB,CAAC;MAAE;MAC5DC,QAAQ,EAAE,KAAK;MAAE;MACjBC,IAAI,EAAE,KAAK;MAAE;MACbC,QAAQ,EAAE,IAAI;MAAE;MAChBX,aAAa,CAAE;IAEjB,CAAC;;IAED,MAAMY,SAAS,GAAGb,MAAM,CAACc,aAAa,CAACR,OAAO,CAAC;IAE/C,OAAO,MAAM;MACX;MACAO,SAAS,CAACE,OAAO,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOZ,OAAA;IAAKa,EAAE,EAAC,sBAAsB;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAS;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzG,CAAC;AAACnB,EAAA,CArBID,mBAAmB;AAAAqB,EAAA,GAAnBrB,mBAAmB;AAuBzB,eAAeA,mBAAmB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}